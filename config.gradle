/*
 * Copyright 2015 Chaos
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// config for properties
Properties properties = new Properties()
File localProperties = project.rootProject.file('local.properties');
if (localProperties.exists()) {
    properties.load(localProperties.newDataInputStream())
}

def wechatAppId = properties.getProperty('WECHAT_APPID')
ext.WECHAT_APPID = wechatAppId != null ? wechatAppId : ""

def KEY_ALIAS = properties.getProperty('KEY_ALIAS')
def KEY_PASSWORD = properties.getProperty('KEY_PASSWORD')
def STORE_FILE = properties.getProperty('STORE_FILE')
def STORE_PASSWORD = properties.getProperty('STORE_PASSWORD')

// config for dependencies
ext {
    libsVersion = [support : '25.1.1',
                   retrofit: '2.1.0']

    libs = [supportAnnotations: "com.android.support:support-annotations:${libsVersion.support}",
            recyclerviewV7    : "com.android.support:recyclerview-v7:${libsVersion.support}",
            cardviewV7        : "com.android.support:cardview-v7:${libsVersion.support}",
            appcompatV7       : "com.android.support:appcompat-v7:${libsVersion.support}",
            design            : "com.android.support:design:${libsVersion.support}",
            supportV4         : "com.android.support:support-v4:${libsVersion.support}",
            preferenceV14      : "com.android.support:preference-v14:${libsVersion.support}"]
}

// config for android config
def versionCode() {
    def cmd = 'git rev-list HEAD --no-merges --count'
    cmd.execute().text.trim().toInteger()
}

def versionName() {  //自动版本名
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()

    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern

    if (matcher) {
        version = version.substring(0, matcher.start()) + "-" + version.substring(matcher.end(), version.length())
    }

    return version
}

// default config for android plugin
subprojects {
    project.plugins.whenPluginAdded { plugin ->
        switch (plugin.class.name) {
            case 'com.android.build.gradle.AppPlugin':
                project.android {
                    if (STORE_FILE != null) {
                        signingConfigs {
                            releaseConfig {
                                storeFile file(STORE_FILE)
                                storePassword STORE_PASSWORD
                                keyAlias KEY_ALIAS
                                keyPassword KEY_PASSWORD
                            }
                        }

                        buildTypes {
                            release {
                                signingConfig signingConfigs.releaseConfig
                            }
                        }
                    }
                }

                project.android.applicationVariants.all { variant ->
                    variant.mergedFlavor.versionCode = versionCode()
                    variant.mergedFlavor.versionName = versionName()
                }

                // fall through
            case 'com.android.build.gradle.LibraryPlugin':
                project.android {
                    compileSdkVersion 25
                    buildToolsVersion '25.0.2'

                    defaultConfig {
                        minSdkVersion 14
                        targetSdkVersion 25
                    }
                }
                break
        }
    }
}